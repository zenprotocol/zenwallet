.align-left-headers .rt-th {
  text-align: left;
}

.ReactTable input,
.ReactTable select { color: #000 }

table,
.ReactTable {
  width: 100%;
  border-collapse: separate;
  color: $off-white;
  font-family: 'Roboto Mono', monospace;

  thead,
  .rt-thead {
    font-family: 'Source Sans Pro', sans-serif;
    text-align: left;

    tr,
    .rt-tr { background: $table-row-hover; }

    th,
    .rt-th { padding: 13px 16px; }
  }

  tbody,
  .rt-tbody {
    tr,
    .rt-tr { font-size: 0.85rem; }
    td,
    .rt-td {
      width: 140px;
      padding: 12px 12px 12px 16px;
    }
    td.amount.align-right:last-child,
    .rt-td.amount.align-right:last-child {
      padding-right: 16px !important;
      width: 40px;
    }
  }

  th,
  .rt-th { color: $bright-grey; }

  tr,
  .rt-tr {
    background: $dark-grey-2;
    td.text,
    .rt-td { font-family: 'Source Sans Pro', sans-serif; }
    &.separator { height: 2px; }
    &:hover { background: $table-row-hover; }
  }

  td.multiple-inner-tx-deltas,
  .rt-td.multiple-inner-tx-deltas, {
    table tbody td,
    .ReactTable .rt-tbody .rt-td {
      padding: 3px 0px 12px 16px !important;
    }
  }


  td.copyable,
  .rt-td .copyable {
    svg {
      opacity: 0;
      transition: 0.5s opacity;
      cursor: pointer;
    }
    &:hover svg { opacity: 1; }
  }

  td.buttons,
  .rt-td.buttons, {
    i.fa { font-size: 12px; }
  }

  td.multiple-inner-tx-deltas,
  .rt-td.multiple-inner-tx-deltas { padding: 0; }

  tr:hover td.multiple-inner-tx-deltas table tbody tr td {
    background: $table-row-hover;
  }

}

span.key {
  color: $bright-grey;
  text-transform: uppercase;
  margin: 0 20px 0 0;
}
span.value {
  color: $light-white;
  text-transform: uppercase;
  text-align: right;
}

@media screen and (max-width: 1255px) {
  table tbody td.buttons,
  .ReactTable .rt-tbody, .rt-td.buttons {
    span.button-text { display: none; }
    i.fa { width: 0; }
    .button.play { padding: 4px 9px 5px 11px; }
    .button.code { padding: 4px 0px 5px 9px; }
  }
}
